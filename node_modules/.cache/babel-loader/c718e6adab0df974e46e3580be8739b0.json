{"ast":null,"code":"var _jsxFileName = \"/Users/ace/Documents/Hack.Diversity/Mini Project/community-library/src/components/Posts.js\";\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Col from 'react-bootstrap/Col';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport Image from 'react-bootstrap/Image'; //SAME AS BOOK COMPONENT\n\nconst Posts = ({\n  posts,\n  loading\n}) => {\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  const deleteBook = id => {\n    Axios.delete('http://localhost:5000/books/delete/' + id).then(res => console.log(res.data)); //Might need to make other function/ see 1:35:45\n    //To filter 0 copies\n    //el.copies !== 0\n\n    posts = posts.filter(el => el._id !== id);\n    window.location = '/community-library/';\n  };\n\n  const returnBook = id => {\n    Axios.post('http://localhost:5000/books/return/' + id).then(res => console.log(res.data)); // refresh page\n    // might change to just re render view DOM with react\n\n    window.location = '/community-library/';\n  };\n\n  const borrowBook = id => {\n    Axios.post('http://localhost:5000/books/borrow/' + id).then(res => console.log(res.data));\n    window.location = '/community-library/';\n  };\n\n  const copies = copy => {\n    if (copy == 0) {\n      return \"Unavailable\";\n    }\n\n    /*#__PURE__*/\n    React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: post.image_url_s,\n      alt: post.title,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, post.title), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, post.author), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, post.publication_year), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, post.isbn), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, copies(post.copies)), /*#__PURE__*/React.createElement(\"td\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/show/\" + post._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 42\n      }\n    }, \"Details\")), \" \", ' ', /*#__PURE__*/React.createElement(Button, {\n      display: \"inline-block\",\n      variant: \"danger\",\n      href: \"#\",\n      onClick: () => {\n        deleteBook(post._id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Delete\"), \" \", ' ', /*#__PURE__*/React.createElement(Button, {\n      display: \"inline-block\",\n      variant: \"success\",\n      href: \"#\",\n      onClick: () => {\n        returnBook(post._id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Return\"), \" \", ' ', /*#__PURE__*/React.createElement(Button, {\n      className: \"text-white\",\n      display: \"inline-block\",\n      variant: \"warning\",\n      href: \"#\",\n      onClick: () => {\n        borrowBook(post._id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Borrow\"), \" \", ' '))));\n  }; // Create Copies function with state ( Look at BL2 )\n  // Iniside Copies function, use effect the books copies from posts using map\n  // Set copies after return or borrow, prolly put inside where posts at \n\n\n  return /*#__PURE__*/React.createElement(Table, {\n    size: true,\n    responsive: true,\n    bordered: true,\n    striped: true,\n    hover: true,\n    style: {\n      backgroundColor: 'white',\n      border: \"10px solid black\",\n      borderRadius: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light flex-table text-align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"text-align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"text-align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, \"Author\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, \"Year of Publication\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, \"ISBN\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \"Copies\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, \"Services\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, posts.map(post => /*#__PURE__*/React.createElement(\"tr\", {\n    key: post.id,\n    className: \"bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"copies\", {\n    copy: post.copies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })))));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/ace/Documents/Hack.Diversity/Mini Project/community-library/src/components/Posts.js"],"names":["React","useState","useEffect","Table","Button","ButtonGroup","Col","Link","Axios","Image","Posts","posts","loading","deleteBook","id","delete","then","res","console","log","data","filter","el","_id","window","location","returnBook","post","borrowBook","copies","copy","image_url_s","title","author","publication_year","isbn","backgroundColor","border","borderRadius","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Col from 'react-bootstrap/Col'\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport Image from 'react-bootstrap/Image'\n//SAME AS BOOK COMPONENT\nconst Posts = ({ posts, loading }) => {\n\n  \n  \n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  const deleteBook = (id) => {\n    \n    Axios.delete('http://localhost:5000/books/delete/'+id)\n        .then(res => console.log(res.data));\n    \n        //Might need to make other function/ see 1:35:45\n        //To filter 0 copies\n\n        //el.copies !== 0\n    \n    posts = posts.filter(el => el._id !== id)\n    \n    window.location = ('/community-library/')\n    \n    \n}\n\nconst returnBook = ( id) => {\n  Axios.post('http://localhost:5000/books/return/'+id)\n      .then(res => console.log(res.data));\n\n\n  // refresh page\n  // might change to just re render view DOM with react\n  window.location = ('/community-library/')\n}\n\nconst borrowBook = (id) => {\n  Axios.post('http://localhost:5000/books/borrow/'+id)\n      .then(res => console.log(res.data));\n  \n  window.location='/community-library/'\n}\n\nconst copies = (copy) => {\n  \n  if (copy == 0){\n    return \"Unavailable\"\n  }\n  \n    <tr >\n      <td ><Image src={post.image_url_s}  alt={post.title} fluid /> </td>\n        <td>{post.title}</td>\n        <td>{post.author}</td>\n        <td>{post.publication_year}</td>\n        <td>{post.isbn}</td>\n        <td>{copies(post.copies)}</td>\n        <td align = 'center'>\n            <Col>\n            <ButtonGroup>\n            <Link to={\"/show/\"+post._id}><Button variant = 'info'>Details</Button></Link> {' '}\n            <Button   display = 'inline-block' variant = 'danger' href = '#' onClick = {() => { deleteBook(post._id) }} >Delete</Button> {' '} \n            <Button  display = 'inline-block' variant = 'success' href=\"#\" onClick={() => { returnBook(post._id) }}>Return</Button> {' '}\n            <Button className = 'text-white'  display = 'inline-block' variant = 'warning' href=\"#\" onClick={() => { borrowBook(post._id) }}>Borrow</Button> {' '}\n            </ButtonGroup>\n            </Col>\n        </td>\n\n    </tr>\n}\n\n// Create Copies function with state ( Look at BL2 )\n// Iniside Copies function, use effect the books copies from posts using map\n// Set copies after return or borrow, prolly put inside where posts at \n\n\n\n\n  return (\n    <Table size responsive bordered striped hover style = {{backgroundColor : 'white', border : \"10px solid black\", borderRadius : '10px'}}>\n      <thead className='thead-light flex-table text-align-center'>\n                        <tr>\n                            <th className='text-align-center' >Image</th>\n                            <th className = 'text-align-center'>Title</th>\n                            <th>Author</th>\n                            <th>Year of Publication</th>\n                            <th>ISBN</th>\n                            <th>Copies</th>\n                            <th>Services</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n\n      {posts.map(post => (\n      \n        \n        <tr key={post.id} className=\"bordered\">\n           \n        <copies copy = {post.copies} />\n        \n        \n    </tr>\n        \n      ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}