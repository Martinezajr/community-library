{"ast":null,"code":"var _jsxFileName = \"/Users/ace/Documents/Hack.Diversity/Mini Project/community-library/src/components/books-list.component.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Pagination = ({\n  postsPerPage,\n  totalPosts,\n  paginate\n}) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, pageNumbers.map(number => /*#__PURE__*/React.createElement(\"li\", {\n    key: number,\n    className: \"page-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => paginate(number),\n    href: \"!#\",\n    className: \"page-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, number)))));\n};\n\n{\n  /*\n  // Above is new way to do it taken from pagination\n  // Book function component \n  // Takes in book property and uses its attributes\n  const Book = props => (\n     <tr>\n         {//<td> <img src= {props.book.image_url_m}> </img> </td>\n         }\n         <td><img src={props.book.image_url_s}  alt={props.book.title} /> </td>\n         <td>{props.book.title}</td>\n         <td>{props.book.author}</td>\n         <td>{props.book.publication_year}</td>\n         <td>{props.book.isbn}</td>\n         <td>{props.book.copies}</td>\n         <td>\n             <Link to={\"/show/\"+props.book._id}>Details</Link> | <a href=\"#\" onClick={() => { props.deleteBook(props.book._id) }}>Delete</a> | <a href=\"/\" onClick={() => { props.returnBook(props.book._id) }}>Return</a> |<a href=\"#\" onClick={() => { props.borrowBook(props.book._id) }}>Borrow</a> \n         </td>\n     </tr>\n  ) \n      */\n}\nexport default class BooksList extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteBook = this.deleteBook.bind(this);\n    this.returnBook = this.returnBook.bind(this);\n    this.state = {\n      books: []\n    };\n  } // Loads JSON from Database\n\n\n  componentDidMount() {\n    Axios.get('http://localhost:5000/books/').then(response => {\n      this.setState({\n        books: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  deleteBook(id) {\n    Axios.delete('http://localhost:5000/books/delete/' + id).then(res => console.log(res.data)); //Might need to make other function/ see 1:35:45\n    //To filter 0 copies\n    //el.copies !== 0\n\n    this.setState({\n      books: this.state.books.filter(el => el._id !== id)\n    });\n  }\n\n  returnBook(id) {\n    Axios.post('http://localhost:5000/books/return/' + id).then(res => console.log(res.data)); // refresh page\n    // might change to just re render view DOM with react\n\n    this.forceUpdate();\n  }\n\n  borrowBook(id) {\n    Axios.post('http://localhost:5000/books/borrow/' + id).then(res => console.log(res.data));\n    window.location = '/';\n  } // Function that returns a single Book component (Has details of each book) for each JSON object(Book)\n\n\n  bookList() {\n    return this.state.books.map(currentbook => {\n      return /*#__PURE__*/React.createElement(Book, {\n        book: currentbook,\n        deleteBook: this.deleteBook,\n        returnBook: this.returnBook,\n        borrowBook: this.borrowBook,\n        key: currentbook._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 20\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \"Books!\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, this.bookList())));\n  }\n\n}","map":{"version":3,"sources":["/Users/ace/Documents/Hack.Diversity/Mini Project/community-library/src/components/books-list.component.js"],"names":["React","Component","useState","useEffect","Link","Axios","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","map","number","BooksList","constructor","props","deleteBook","bind","returnBook","state","books","componentDidMount","get","then","response","setState","data","catch","error","console","log","id","delete","res","filter","el","_id","post","forceUpdate","borrowBook","window","location","bookList","currentbook","render"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n    const pageNumbers = [];\n  \n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n  \n    return (\n      <nav>\n        <ul className='pagination'>\n          {pageNumbers.map(number => (\n            <li key={number} className='page-item'>\n              <a onClick={() => paginate(number)} href='!#' className='page-link'>\n                {number}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    );\n  };\n  \n\n{/*\n// Above is new way to do it taken from pagination\n// Book function component \n// Takes in book property and uses its attributes\nconst Book = props => (\n    <tr>\n        {//<td> <img src= {props.book.image_url_m}> </img> </td>\n        }\n        <td><img src={props.book.image_url_s}  alt={props.book.title} /> </td>\n        <td>{props.book.title}</td>\n        <td>{props.book.author}</td>\n        <td>{props.book.publication_year}</td>\n        <td>{props.book.isbn}</td>\n        <td>{props.book.copies}</td>\n        <td>\n            <Link to={\"/show/\"+props.book._id}>Details</Link> | <a href=\"#\" onClick={() => { props.deleteBook(props.book._id) }}>Delete</a> | <a href=\"/\" onClick={() => { props.returnBook(props.book._id) }}>Return</a> |<a href=\"#\" onClick={() => { props.borrowBook(props.book._id) }}>Borrow</a> \n        </td>\n    </tr>\n) \n\n    */ }\n\nexport default class BooksList extends Component {\n\n\n\n    constructor(props) {\n        super(props);\n\n        this.deleteBook = this.deleteBook.bind(this);\n        this.returnBook = this.returnBook.bind(this);\n        this.state = {\n            books: []\n            \n        }\n    }\n\n    // Loads JSON from Database\n    componentDidMount() {\n        Axios.get('http://localhost:5000/books/')\n            .then(response => {\n                    this.setState ({ books: response.data })\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }\n\n\n    deleteBook(id) {\n        Axios.delete('http://localhost:5000/books/delete/'+id)\n            .then(res => console.log(res.data));\n        \n            //Might need to make other function/ see 1:35:45\n            //To filter 0 copies\n\n            //el.copies !== 0\n        this.setState ({\n            books: this.state.books.filter(el => el._id !== id)\n        })\n    }\n\n    returnBook(id) {\n        Axios.post('http://localhost:5000/books/return/'+id)\n            .then(res => console.log(res.data));\n\n\n        // refresh page\n        // might change to just re render view DOM with react\n        this.forceUpdate()\n    }\n\n    \n    borrowBook(id) {\n        Axios.post('http://localhost:5000/books/borrow/'+id)\n            .then(res => console.log(res.data));\n        \n        window.location='/'\n    }\n\n    // Function that returns a single Book component (Has details of each book) for each JSON object(Book)\n    bookList() {\n        return this.state.books.map(currentbook => {\n            return <Book book={currentbook} deleteBook={this.deleteBook} returnBook={this.returnBook} borrowBook={this.borrowBook} key={currentbook._id}/>;\n        })\n    }\n    \n    render() {     \n        return (\n            <div>\n                <h3>Books!</h3>\n                <table className='table'>\n                    \n                    <tbody>\n                        {\n                        // this method takes information from books array and puts it into the rows\n                        }\n                        { this.bookList() }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}