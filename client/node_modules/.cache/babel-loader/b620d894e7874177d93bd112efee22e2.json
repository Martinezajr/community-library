{"ast":null,"code":"var _jsxFileName = \"/Users/ace/Documents/Hack.Diversity/Mini Project/community-library/src/components/Posts.js\";\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios'; //SAME AS BOOK COMPONENT\n\nconst Posts = ({\n  posts,\n  loading\n}) => {\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  const deleteBook = id => {\n    Axios.delete('http://localhost:5000/books/delete/' + id).then(res => console.log(res.data)); //Might need to make other function/ see 1:35:45\n    //To filter 0 copies\n    //el.copies !== 0\n\n    posts = posts.filter(el => el._id !== id); //window.location = ('/community-library/')\n  };\n\n  const returnBook = id => {\n    Axios.post('http://localhost:5000/books/return/' + id).then(res => console.log(res.data)); // refresh page\n    // might change to just re render view DOM with react\n\n    window.location = '/community-library/';\n  }; // Create Copies function with state ( Look at BL2 )\n  // Iniside Copies function, use effect the books copies from posts using map\n  // Set copies after return or borrow, prolly put inside where posts at \n\n\n  return /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    striped: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, \"Author\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, \"Year of Publication\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, \"ISBN\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, \"Copies\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, posts.map(post => /*#__PURE__*/React.createElement(\"tr\", {\n    key: post.id,\n    className: \"bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: post.image_url_s,\n    alt: post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, post.title), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, post.author), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, post.publication_year), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, post.isbn), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, post.copies), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/show/\" + post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 42\n    }\n  }, \"Details\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    href: \"#\",\n    onClick: () => {\n      deleteBook(post._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    href: \"#\",\n    onClick: () => {\n      returnBook(post._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Return\"))))));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/ace/Documents/Hack.Diversity/Mini Project/community-library/src/components/Posts.js"],"names":["React","useState","useEffect","Table","Button","Link","Axios","Posts","posts","loading","deleteBook","id","delete","then","res","console","log","data","filter","el","_id","returnBook","post","window","location","map","image_url_s","title","author","publication_year","isbn","copies"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button'\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\n//SAME AS BOOK COMPONENT\nconst Posts = ({ posts, loading }) => {\n\n  \n  \n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  const deleteBook = (id) => {\n    \n    Axios.delete('http://localhost:5000/books/delete/'+id)\n        .then(res => console.log(res.data));\n    \n        //Might need to make other function/ see 1:35:45\n        //To filter 0 copies\n\n        //el.copies !== 0\n    \n    posts = posts.filter(el => el._id !== id)\n    \n    //window.location = ('/community-library/')\n    \n    \n}\n\nconst returnBook = ( id) => {\n  Axios.post('http://localhost:5000/books/return/'+id)\n      .then(res => console.log(res.data));\n\n\n  // refresh page\n  // might change to just re render view DOM with react\n  window.location = ('/community-library/')\n}\n\n\n// Create Copies function with state ( Look at BL2 )\n// Iniside Copies function, use effect the books copies from posts using map\n// Set copies after return or borrow, prolly put inside where posts at \n\n\n\n\n  return (\n    <Table bordered striped hover>\n      <thead className='thead-light'>\n                        <tr>\n                            <th >Image</th>\n                            <th>Title</th>\n                            <th>Author</th>\n                            <th>Year of Publication</th>\n                            <th>ISBN</th>\n                            <th>Copies</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n      {posts.map(post => (\n        <tr key={post.id} className=\"bordered\">\n           \n        {//<td> <img src= {post.image_url_m}> </img> </td>\n        }\n        <td><img src={post.image_url_s}  alt={post.title} /> </td>\n        <td>{post.title}</td>\n        <td>{post.author}</td>\n        <td>{post.publication_year}</td>\n        <td>{post.isbn}</td>\n        <td>{post.copies}</td>\n        <td>\n            <Link to={\"/show/\"+post._id}><Button>Details</Button></Link> \n            <Button variant = 'danger' href = '#' onClick = {() => { deleteBook(post._id) }} >Delete</Button>  \n            <Button variant = 'success' href=\"#\" onClick={() => { returnBook(post._id) }}>Return</Button>\n        </td>\n        \n    </tr>\n        \n      ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}